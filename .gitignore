# OB'DO project structure
**/scripts/*.bin

# Config file for Export script
exportPath.config

# MDK ARM project generated with STM32Cube
*.uvguix.*
*.uvgui.*
*.suo
*.scvd
JLinkLog.txt
JLinkSettings.ini
**/MDK-ARM/RTE/
**/MDK-ARM/DebugConfig/
**/MDK-ARM/*.bin
**/dev/**/**/**/Objects_*/
**/dev/**/**/MDK-ARM/Listings_*/
**/dev/**/**/Debug/output/
## Most of CMSIS drivers used by Keil is located in its installation folder, do not need it in the project
### Ignore CMSIS folders (note the /* at the end to make it work with the negated pattern)
**/dev/**/**/Drivers/CMSIS/DSP/*
**/dev/**/**/Drivers/CMSIS/Lib/*
**/dev/**/**/Drivers/CMSIS/RTOS/*
**/dev/**/**/Drivers/CMSIS/RTOS2/*

# STM32Cube IDE project generated with STM32Cube
**/dev/**/.gitignore
## Legacy project structure
**/dev/**/**/Debug/*
**/dev/**/**/DebugBootloader/*
**/dev/**/**/Release/*
**/dev/**/**/ReleaseBootloader/*
## New project structure
**/dev/**/**/RawApp_Debug/*
**/dev/**/**/BTLDApp_Debug/*
**/dev/**/**/RawApp_Release/*
**/dev/**/**/BTLDApp_Release/*

# CubeMX local project file
.mxproject

# Simplicity Studio project for BGM family
**/GNU ARM*/
imported_project_report.html
BgBuild_Log.txt

# Microsoft Office temporary file
**/~$*.*

# Created by https://www.toptal.com/developers/gitignore/api/eclipse
# Edit at https://www.toptal.com/developers/gitignore?templates=eclipse

### Eclipse ###
.metadata
bin/
tmp/
*.tmp
*.bak
*.swp
*~.nib
local.properties
.settings/
.loadpath
.recommenders

# External tool builders
.externalToolBuilders/

# Locally stored "Eclipse launch configurations"
*.launch

# PyDev specific (Python IDE for Eclipse)
*.pydevproject

# CDT-specific (C/C++ Development Tooling)
#.cproject

# CDT- autotools
.autotools

# Java annotation processor (APT)
.factorypath

# PDT-specific (PHP Development Tools)
.buildpath

# sbteclipse plugin
.target

# Tern plugin
.tern-project

# TeXlipse plugin
.texlipse

# STS (Spring Tool Suite)
.springBeans

# Code Recommenders
.recommenders/

# Annotation Processing
.apt_generated/
.apt_generated_test/

# Scala IDE specific (Scala & Java development for Eclipse)
.cache-main
.scala_dependencies
.worksheet

# Uncomment this line if you wish to ignore the project description file.
# Typically, this file would be tracked if it contains build/dependency configurations:
#.project

### Eclipse Patch ###
# Spring Boot Tooling
.sts4-cache/

# End of https://www.toptal.com/developers/gitignore/api/eclipse

## Segger Embedded Studio ##
*.jlink
*.emSession
*.expand
**/ses/Output/
**/micro-ecc/**/armgcc/*.a
**/micro-ecc/**/armgcc/*.lib
**/micro-ecc/**/armgcc/_build/
**/micro-ecc/micro-ecc/


# Created by https://www.toptal.com/developers/gitignore/api/python,visualstudiocode
# Edit at https://www.toptal.com/developers/gitignore?templates=python,visualstudiocode

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
# target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
#.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

# Support for Project snippet scope
!.vscode/*.code-snippets

# End of https://www.toptal.com/developers/gitignore/api/python,visualstudiocode